{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["funcStyle","funcId","FuncComp","props","numberState","useState","initNumber","number","setNumber","Date","toString","_date","setDate","useEffect","console","log","document","title","className","type","value","onClick","Math","random","classStyle","ClassComp","state","date","nextProps","nextState","this","setState","bind","React","Component","App","funcShow","setFuncShow","classShow","setClassShow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oRA4BA,IAAIA,EAAY,aACZC,EAAS,EACb,SAASC,EAASC,GAChB,IAAIC,EAAcC,mBAASF,EAAMG,YAC7BC,EAASH,EAAY,GACrBI,EAAYJ,EAAY,GAHL,EASAC,oBAAS,IAAII,MAAOC,YATpB,mBASlBC,EATkB,KASXC,EATW,KAiEvB,OAtDAC,qBAAU,WAMR,OALAC,QAAQC,IACN,8CAA+Cd,EAC/CD,GAEFgB,SAASC,MAAQV,EACV,WACLO,QAAQC,IACN,wDAAyDd,EACzDD,MAGH,IAGHa,qBACE,WAOE,OANAC,QAAQC,IACN,0EACId,EACJD,GAEFgB,SAASC,MAAQV,EACV,WACLO,QAAQC,IACN,iFACId,EACJD,MAIN,CAACO,IAGHM,qBACE,WAOE,OANAC,QAAQC,IACN,yEACId,EACJD,GAEFgB,SAASC,MAAQN,EACV,WACLG,QAAQC,IACN,gFACId,EACJD,MAIN,CAACW,IAGHG,QAAQC,IAAI,uBAAwBd,EAAQD,GAE1C,sBAAKkB,UAAU,YAAf,UACE,0DACA,0CAAaX,KACb,wCAAWI,KACX,uBACEQ,KAAK,SACLC,MAAM,SACNC,QAAS,WACPb,EAAUc,KAAKC,aAGnB,uBACEJ,KAAK,SACLC,MAAM,OACNC,QAAS,WACPT,GAAQ,IAAIH,MAAOC,kBAM7B,IAAIc,EAAa,YACXC,E,4MACJC,MAAQ,CACNnB,OAAQ,EAAKJ,MAAMG,WACnBqB,MAAM,IAAIlB,MAAOC,Y,mEAGjBI,QAAQC,IAAI,gCAAiCS,K,0CAG7CV,QAAQC,IAAI,+BAAgCS,K,4CAExBI,EAAWC,GAE/B,OADAf,QAAQC,IAAI,mCAAoCS,IACzC,I,0CAEWI,EAAWC,GAC7Bf,QAAQC,IAAI,iCAAkCS,K,yCAE7BI,EAAWC,GAC5Bf,QAAQC,IAAI,gCAAiCS,K,6CAG7CV,QAAQC,IAAI,kCAAmCS,K,+BAI/C,OADAV,QAAQC,IAAI,oBAAqBS,GAE/B,sBAAKN,UAAU,YAAf,UACE,uDACA,0CAAaY,KAAKJ,MAAMnB,UACxB,wCAAWuB,KAAKJ,MAAMC,QACtB,uBACER,KAAK,SACLC,MAAM,SACNC,QAAS,WACPS,KAAKC,SAAS,CAAExB,OAAQe,KAAKC,YAC7BS,KAAKF,QAET,uBACEX,KAAK,SACLC,MAAM,OACNC,QAAS,WACPS,KAAKC,SAAS,CAAEJ,MAAM,IAAIlB,MAAOC,cACjCsB,KAAKF,e,GA3COG,IAAMC,WAkDfC,EArKf,WAAgB,IAAD,EACiB9B,oBAAS,GAD1B,mBACR+B,EADQ,KACEC,EADF,OAEmBhC,oBAAS,GAF5B,mBAERiC,EAFQ,KAEGC,EAFH,KAGb,OACE,sBAAKrB,UAAU,YAAf,UACE,6CACA,uBACEC,KAAK,SACLC,MAAM,cACNC,QAAS,WACPgB,GAAY,MAGhB,uBACElB,KAAK,SACLC,MAAM,cACNC,QAAS,WACPkB,GAAa,MAGhBH,EAAW,cAAClC,EAAD,CAAUI,WAAY,IAAiB,KAClDgC,EAAY,cAAC,EAAD,CAAWhC,WAAY,IAAkB,SCZ7CkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnC,SAASoC,eAAe,SAM1BZ,M","file":"static/js/main.be08aab4.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  var [funcShow, setFuncShow] = useState(true);\n  var [classShow, setClassShow] = useState(true);\n  return (\n    <div className=\"container\">\n      <h1>Hello World</h1>\n      <input\n        type=\"button\"\n        value=\"remove func\"\n        onClick={function () {\n          setFuncShow(false);\n        }}\n      ></input>\n      <input\n        type=\"button\"\n        value=\"remove comp\"\n        onClick={function () {\n          setClassShow(false);\n        }}\n      ></input>\n      {funcShow ? <FuncComp initNumber={2}></FuncComp> : null}\n      {classShow ? <ClassComp initNumber={2}></ClassComp> : null}\n    </div>\n  );\n}\nvar funcStyle = \"color:blue\";\nvar funcId = 0;\nfunction FuncComp(props) {\n  var numberState = useState(props.initNumber);\n  var number = numberState[0];\n  var setNumber = numberState[1];\n\n  //   var dateState = useState((new Date()).toString());\n  //   var _date = dateState[0];\n  //   var setDate = dateState[1];\n\n  var [_date, setDate] = useState(new Date().toString());\n\n  useEffect(function () {\n    console.log(\n      \"%cfunc => useEffect (componentDidMount) \" + ++funcId,\n      funcStyle\n    );\n    document.title = number;\n    return function () {\n      console.log(\n        \"%cfunc => useEffect return (componentWillUnMount) \" + ++funcId,\n        funcStyle\n      );\n    };\n  }, []);\n\n  //side effect\n  useEffect(\n    function () {\n      console.log(\n        \"%cfunc => useEffect number (componentDidMount & componentDidUpdate) \" +\n          ++funcId,\n        funcStyle\n      );\n      document.title = number;\n      return function () {\n        console.log(\n          \"%cfunc => useEffect number return (componentDidMount & componentDidUpdate) \" +\n            ++funcId,\n          funcStyle\n        );\n      };\n    },\n    [number]\n  );\n\n  useEffect(\n    function () {\n      console.log(\n        \"%cfunc => useEffect _date (componentDidMount & componentDidUpdate) \" +\n          ++funcId,\n        funcStyle\n      );\n      document.title = _date;\n      return function () {\n        console.log(\n          \"%cfunc => useEffect _date return (componentDidMount & componentDidUpdate) \" +\n            ++funcId,\n          funcStyle\n        );\n      };\n    },\n    [_date]\n  );\n\n  console.log(\"%cfunc => render \" + ++funcId, funcStyle);\n  return (\n    <div className=\"container\">\n      <h2>function style component</h2>\n      <p>Number : {number}</p>\n      <p>Date : {_date}</p>\n      <input\n        type=\"button\"\n        value=\"random\"\n        onClick={function () {\n          setNumber(Math.random());\n        }}\n      ></input>\n      <input\n        type=\"button\"\n        value=\"date\"\n        onClick={function () {\n          setDate(new Date().toString());\n        }}\n      ></input>\n    </div>\n  );\n}\nvar classStyle = \"color:red\";\nclass ClassComp extends React.Component {\n  state = {\n    number: this.props.initNumber,\n    date: new Date().toString(),\n  };\n  componentWillMount() {\n    console.log(\"%cclass => componentWillMount\", classStyle);\n  }\n  componentDidMount() {\n    console.log(\"%cclass => componentDidMount\", classStyle);\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"%cclass => shouldComponentUpdate\", classStyle);\n    return true;\n  }\n  componentWillUpdate(nextProps, nextState) {\n    console.log(\"%cclass => componentWillUpdate\", classStyle);\n  }\n  componentDidUpdate(nextProps, nextState) {\n    console.log(\"%cclass => componentDidUpdate\", classStyle);\n  }\n  componentWillUnmount() {\n    console.log(\"%cclass => componentWillUnmount\", classStyle);\n  }\n  render() {\n    console.log(\"%cclass => render\", classStyle);\n    return (\n      <div className=\"container\">\n        <h2>class style component</h2>\n        <p>Number : {this.state.number}</p>\n        <p>Date : {this.state.date}</p>\n        <input\n          type=\"button\"\n          value=\"random\"\n          onClick={function () {\n            this.setState({ number: Math.random() });\n          }.bind(this)}\n        ></input>\n        <input\n          type=\"button\"\n          value=\"date\"\n          onClick={function () {\n            this.setState({ date: new Date().toString() });\n          }.bind(this)}\n        ></input>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}