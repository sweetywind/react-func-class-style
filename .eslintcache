[{"E:\\study\\react-func-class-style\\src\\reportWebVitals.js":"1","E:\\study\\react-func-class-style\\src\\App.js":"2"},{"size":362,"mtime":1606199941945,"results":"3","hashOfConfig":"4"},{"size":4267,"mtime":1606366984668,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bkm06e",{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"E:\\study\\react-func-class-style\\src\\reportWebVitals.js",[],"E:\\study\\react-func-class-style\\src\\App.js",["11"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  var [funcShow, setFuncShow] = useState(true);\n  var [classShow, setClassShow] = useState(true);\n  return (\n    <div className=\"container\">\n      <h1>Hello World</h1>\n      <input\n        type=\"button\"\n        value=\"remove func\"\n        onClick={function () {\n          setFuncShow(false);\n        }}\n      ></input>\n      <input\n        type=\"button\"\n        value=\"remove comp\"\n        onClick={function () {\n          setClassShow(false);\n        }}\n      ></input>\n      {funcShow ? <FuncComp initNumber={2}></FuncComp> : null}\n      {classShow ? <ClassComp initNumber={2}></ClassComp> : null}\n    </div>\n  );\n}\nvar funcStyle = \"color:blue\";\nvar funcId = 0;\nfunction FuncComp(props) {\n  var numberState = useState(props.initNumber);\n  var number = numberState[0];\n  var setNumber = numberState[1];\n\n  //   var dateState = useState((new Date()).toString());\n  //   var _date = dateState[0];\n  //   var setDate = dateState[1];\n\n  var [_date, setDate] = useState(new Date().toString());\n\n  useEffect(function () {\n    console.log(\n      \"%cfunc => useEffect (componentDidMount) \" + ++funcId,\n      funcStyle\n    );\n    document.title = number;\n    return function () {\n      console.log(\n        \"%cfunc => useEffect return (componentWillUnMount) \" + ++funcId,\n        funcStyle\n      );\n    };\n  }, []);\n\n  //side effect\n  useEffect(\n    function () {\n      console.log(\n        \"%cfunc => useEffect number (componentDidMount & componentDidUpdate) \" +\n          ++funcId,\n        funcStyle\n      );\n      document.title = number;\n      return function () {\n        console.log(\n          \"%cfunc => useEffect number return (componentDidMount & componentDidUpdate) \" +\n            ++funcId,\n          funcStyle\n        );\n      };\n    },\n    [number]\n  );\n\n  useEffect(\n    function () {\n      console.log(\n        \"%cfunc => useEffect _date (componentDidMount & componentDidUpdate) \" +\n          ++funcId,\n        funcStyle\n      );\n      document.title = _date;\n      return function () {\n        console.log(\n          \"%cfunc => useEffect _date return (componentDidMount & componentDidUpdate) \" +\n            ++funcId,\n          funcStyle\n        );\n      };\n    },\n    [_date]\n  );\n\n  console.log(\"%cfunc => render \" + ++funcId, funcStyle);\n  return (\n    <div className=\"container\">\n      <h2>function style component</h2>\n      <p>Number : {number}</p>\n      <p>Date : {_date}</p>\n      <input\n        type=\"button\"\n        value=\"random\"\n        onClick={function () {\n          setNumber(Math.random());\n        }}\n      ></input>\n      <input\n        type=\"button\"\n        value=\"date\"\n        onClick={function () {\n          setDate(new Date().toString());\n        }}\n      ></input>\n    </div>\n  );\n}\nvar classStyle = \"color:red\";\nclass ClassComp extends React.Component {\n  state = {\n    number: this.props.initNumber,\n    date: new Date().toString(),\n  };\n  componentWillMount() {\n    console.log(\"%cclass => componentWillMount\", classStyle);\n  }\n  componentDidMount() {\n    console.log(\"%cclass => componentDidMount\", classStyle);\n  }\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log(\"%cclass => shouldComponentUpdate\", classStyle);\n    return true;\n  }\n  componentWillUpdate(nextProps, nextState) {\n    console.log(\"%cclass => componentWillUpdate\", classStyle);\n  }\n  componentDidUpdate(nextProps, nextState) {\n    console.log(\"%cclass => componentDidUpdate\", classStyle);\n  }\n  componentWillUnmount() {\n    console.log(\"%cclass => componentWillUnmount\", classStyle);\n  }\n  render() {\n    console.log(\"%cclass => render\", classStyle);\n    return (\n      <div className=\"container\">\n        <h2>class style component</h2>\n        <p>Number : {this.state.number}</p>\n        <p>Date : {this.state.date}</p>\n        <input\n          type=\"button\"\n          value=\"random\"\n          onClick={function () {\n            this.setState({ number: Math.random() });\n          }.bind(this)}\n        ></input>\n        <input\n          type=\"button\"\n          value=\"date\"\n          onClick={function () {\n            this.setState({ date: new Date().toString() });\n          }.bind(this)}\n        ></input>\n      </div>\n    );\n  }\n}\n\nexport default App;\n",{"ruleId":"12","severity":1,"message":"13","line":54,"column":6,"nodeType":"14","endLine":54,"endColumn":8,"suggestions":"15"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'number'. Either include it or remove the dependency array.","ArrayExpression",["16"],{"desc":"17","fix":"18"},"Update the dependencies array to be: [number]",{"range":"19","text":"20"},[1393,1395],"[number]"]